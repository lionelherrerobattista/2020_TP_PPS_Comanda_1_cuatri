"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const utils_fs_1 = require("@ionic/utils-fs");
const debug_1 = tslib_1.__importDefault(require("debug"));
const path_1 = tslib_1.__importDefault(require("path"));
const util_1 = tslib_1.__importDefault(require("util"));
const platform_1 = require("./platform");
const debug = debug_1.default('cordova-res:native');
const SOURCE_IOS_ICON = 'resources/ios/icon/';
const SOURCE_IOS_SPLASH = 'resources/ios/splash/';
const TARGET_IOS_ICON = '/App/App/Assets.xcassets/AppIcon.appiconset/';
const TARGET_IOS_SPLASH = '/App/App/Assets.xcassets/Splash.imageset/';
const SOURCE_ANDROID_ICON = 'resources/android/icon/';
const SOURCE_ANDROID_SPLASH = 'resources/android/splash/';
const TARGET_ANDROID_ICON = '/app/src/main/res/';
const TARGET_ANDROID_SPLASH = '/app/src/main/res/';
// TODO: IOS_ICONS, IOS_SPLASHES, ANDROID_ICONS, and ANDROID_SPLASHES should
// probably be part of RESOURCES config.
const IOS_ICONS = [
    { source: 'icon-20.png', target: 'AppIcon-20x20@1x.png' },
    { source: 'icon-20@2x.png', target: 'AppIcon-20x20@2x.png' },
    { source: 'icon-20@2x.png', target: 'AppIcon-20x20@2x-1.png' },
    { source: 'icon-20@3x.png', target: 'AppIcon-20x20@3x.png' },
    { source: 'icon-29.png', target: 'AppIcon-29x29@1x.png' },
    { source: 'icon-29@2x.png', target: 'AppIcon-29x29@2x.png' },
    { source: 'icon-29@2x.png', target: 'AppIcon-29x29@2x-1.png' },
    { source: 'icon-29@3x.png', target: 'AppIcon-29x29@3x.png' },
    { source: 'icon-40.png', target: 'AppIcon-40x40@1x.png' },
    { source: 'icon-40@2x.png', target: 'AppIcon-40x40@2x.png' },
    { source: 'icon-40@2x.png', target: 'AppIcon-40x40@2x-1.png' },
    { source: 'icon-40@3x.png', target: 'AppIcon-40x40@3x.png' },
    { source: 'icon-60@2x.png', target: 'AppIcon-60x60@2x.png' },
    { source: 'icon-60@3x.png', target: 'AppIcon-60x60@3x.png' },
    { source: 'icon-76.png', target: 'AppIcon-76x76@1x.png' },
    { source: 'icon-76@2x.png', target: 'AppIcon-76x76@2x.png' },
    { source: 'icon-83.5@2x.png', target: 'AppIcon-83.5x83.5@2x.png' },
    { source: 'icon-1024.png', target: 'AppIcon-512@2x.png' },
];
const IOS_SPLASHES = [
    { source: 'Default-Portrait@~ipadpro.png', target: 'splash-2732x2732.png' },
    { source: 'Default-Portrait@~ipadpro.png', target: 'splash-2732x2732-1.png' },
    { source: 'Default-Portrait@~ipadpro.png', target: 'splash-2732x2732-2.png' },
];
const ANDROID_ICONS = [
    {
        source: 'drawable-ldpi-icon.png',
        target: 'drawable-hdpi-icon.png',
    },
    {
        source: 'drawable-mdpi-icon.png',
        target: 'mipmap-mdpi/ic_launcher.png',
    },
    {
        source: 'drawable-mdpi-icon.png',
        target: 'mipmap-mdpi/ic_launcher_round.png',
    },
    {
        source: 'drawable-mdpi-icon.png',
        target: 'mipmap-mdpi/ic_launcher_foreground.png',
    },
    {
        source: 'drawable-hdpi-icon.png',
        target: 'mipmap-hdpi/ic_launcher.png',
    },
    {
        source: 'drawable-hdpi-icon.png',
        target: 'mipmap-hdpi/ic_launcher_round.png',
    },
    {
        source: 'drawable-hdpi-icon.png',
        target: 'mipmap-hdpi/ic_launcher_foreground.png',
    },
    {
        source: 'drawable-xhdpi-icon.png',
        target: 'mipmap-xhdpi/ic_launcher.png',
    },
    {
        source: 'drawable-xhdpi-icon.png',
        target: 'mipmap-xhdpi/ic_launcher_round.png',
    },
    {
        source: 'drawable-xhdpi-icon.png',
        target: 'mipmap-xhdpi/ic_launcher_foreground.png',
    },
    {
        source: 'drawable-xxhdpi-icon.png',
        target: 'mipmap-xxhdpi/ic_launcher.png',
    },
    {
        source: 'drawable-xxhdpi-icon.png',
        target: 'mipmap-xxhdpi/ic_launcher_round.png',
    },
    {
        source: 'drawable-xxhdpi-icon.png',
        target: 'mipmap-xxhdpi/ic_launcher_foreground.png',
    },
    {
        source: 'drawable-xxxhdpi-icon.png',
        target: 'mipmap-xxxhdpi/ic_launcher.png',
    },
    {
        source: 'drawable-xxxhdpi-icon.png',
        target: 'mipmap-xxxhdpi/ic_launcher_round.png',
    },
    {
        source: 'drawable-xxxhdpi-icon.png',
        target: 'mipmap-xxxhdpi/ic_launcher_foreground.png',
    },
];
const ANDROID_SPLASHES = [
    { source: 'drawable-land-mdpi-screen.png', target: 'drawable/splash.png' },
    {
        source: 'drawable-land-mdpi-screen.png',
        target: 'drawable-land-mdpi/splash.png',
    },
    {
        source: 'drawable-land-hdpi-screen.png',
        target: 'drawable-land-hdpi/splash.png',
    },
    {
        source: 'drawable-land-xhdpi-screen.png',
        target: 'drawable-land-xhdpi/splash.png',
    },
    {
        source: 'drawable-land-xxhdpi-screen.png',
        target: 'drawable-land-xxhdpi/splash.png',
    },
    {
        source: 'drawable-land-xxxhdpi-screen.png',
        target: 'drawable-land-xxxhdpi/splash.png',
    },
    {
        source: 'drawable-port-mdpi-screen.png',
        target: 'drawable-port-mdpi/splash.png',
    },
    {
        source: 'drawable-port-hdpi-screen.png',
        target: 'drawable-port-hdpi/splash.png',
    },
    {
        source: 'drawable-port-xhdpi-screen.png',
        target: 'drawable-port-xhdpi/splash.png',
    },
    {
        source: 'drawable-port-xxhdpi-screen.png',
        target: 'drawable-port-xxhdpi/splash.png',
    },
    {
        source: 'drawable-port-xxxhdpi-screen.png',
        target: 'drawable-port-xxxhdpi/splash.png',
    },
];
async function copyImages(sourcePath, targetPath, images) {
    await Promise.all(images.map(async (item) => {
        const source = path_1.default.join(sourcePath, item.source);
        const target = path_1.default.join(targetPath, item.target);
        debug('Copying generated resource from %O to %O', source, target);
        await utils_fs_1.copy(source, target);
    }));
    return images.length;
}
async function copyToNativeProject(platform, nativeProject, shouldCopyIcons, shouldCopySplash, logstream, errstream) {
    let count = 0;
    if (platform === "ios" /* IOS */) {
        const iosProjectDirectory = nativeProject.directory || 'ios';
        if (shouldCopyIcons) {
            count += await copyImages(SOURCE_IOS_ICON, path_1.default.join(iosProjectDirectory, TARGET_IOS_ICON), IOS_ICONS);
        }
        if (shouldCopySplash) {
            count += await copyImages(SOURCE_IOS_SPLASH, path_1.default.join(iosProjectDirectory, TARGET_IOS_SPLASH), IOS_SPLASHES);
        }
    }
    else if (platform === "android" /* ANDROID */) {
        const androidProjectDirectory = nativeProject.directory || 'android';
        if (shouldCopyIcons) {
            count += await copyImages(SOURCE_ANDROID_ICON, path_1.default.join(androidProjectDirectory, TARGET_ANDROID_ICON), ANDROID_ICONS);
        }
        if (shouldCopySplash) {
            count += await copyImages(SOURCE_ANDROID_SPLASH, path_1.default.join(androidProjectDirectory, TARGET_ANDROID_SPLASH), ANDROID_SPLASHES);
        }
    }
    else {
        errstream === null || errstream === void 0 ? void 0 : errstream.write(util_1.default.format('WARN:\tCopying to native projects is not supported for %s', platform_1.prettyPlatform(platform)) + '\n');
        return;
    }
    logstream === null || logstream === void 0 ? void 0 : logstream.write(util_1.default.format(`Copied %s resource items to %s`, count, platform_1.prettyPlatform(platform)) + '\n');
}
exports.copyToNativeProject = copyToNativeProject;
